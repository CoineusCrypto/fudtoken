{"version":3,"sources":["theme.js","images/logo192.png","utils/format.js","components/CoineusLoading.js","utils/currency_format.js","redux/services/dexscreener.js","components/TokenInfoDialog.js","components/TokenListItem.js","redux/slices/coineusSlice.js","redux/store.js","utils/promisify.js","utils/get_balances.js","views/HomePage.js","utils/get_prices.js","views/Staking.js","views/CoineusSales.js","views/CoineusSaleDetails.js","utils/index.js","views/RewardsLocker.js","views/Portfolio.js","components/BurntSupply.js","views/Stats.js","Coineus.js","hooks/useDexScreener.js","hooks/useWeb3Modal.js","index.js"],"names":["theme","createTheme","typography","fontFamily","palette","mode","background","default","primary","main","components","MuiPaper","styleOverrides","elevation0","padding","border","height","formatWeiToNumber","value","decimals","BigNumber","div","toNumber","formatWei","round","toFormat","ROUND_HALF_UP","toWei","multipliedBy","toFixed","CoineusLoading","props","Dialog","open","DialogContent","style","margin","textAlign","src","cns_logo","alt","width","position","borderRadius","CircularProgress","size","thickness","Typography","marginTop","label","CoineusUSDFormat","number","isNaN","maxDigits","parseFloat","match","length","minDigits","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","currency","currencySign","currencyDisplay","format","CoineusCryptoFormat","maxFraction","DEXScreenerApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getPair","query","chain_id","pair_address","getToken","token_address","useGetTokenQuery","useGetPairQuery","useStyles","makeStyles","networkChip","marginLeft","top","display","backgroundSize","backgroundImage","negative","color","positive","TokenInfoDialog","contract_address","network","close","wrap","skip","data","status","fullScreen","Button","onClick","right","zIndex","Grid","container","spacing","pairs","PairDetails","Markets","item","xs","classes","getColorClass","baseToken","name","symbol","replace","ListItem","ListItemAvatar","Avatar","chainId","className","clsx","ListItemText","secondary","fdv","priceUsd","priceNative","quoteToken","millify","liquidity","usd","base","quote","paddingLeft","fontWeight","priceChange","m5","h1","h6","h24","volume","txns","buys","sells","getDexLabel","id","List","map","pair","primaryTypographyProps","dexId","secondaryTypographyProps","pairAddress","TokenListItem","wallet","useSelector","state","coineus","price","rewards","rewardsClaim","native","cnsDetails","useState","setOpen","undefined","balances","Paper","marginBottom","secondaryAction","inUSD","allTime","pending","balance","deposits","transfersIn","transfersOut","withdrawals","fees","bal","plus","sub","minus","dividedBy","getCNSEarned","initialState","address","chain","type","info","avax","fuse","bnb","eth","prices","totals","fUSDcontract","fUSDFUSEpair","CNSFUSEpair","VOLTFUSEpair","USDCAVAXpair","FOOKAVAXpair","FUDAVAXpair","HEDGEAVAXpair","BRNAVAXpair","BNBBUSDpair","FEGBNBpair","ETHUSDCPair","OKINAMIUSDCPair","FEGETHpair","rpc","tokens","coineusSlice","createSlice","reducers","updateWalletChain","action","payload","updateWalletAddress","updateWalletProviderType","updateInfo","updateBalances","updatePrices","updateTotals","total","Object","entries","resetWallet","updateTokens","JSON","parse","stringify","actions","configureStore","reducer","coineusReducer","middleware","getDefaultMiddleware","concat","makeBatchRequest","web3","calls","batch","BatchRequest","promises","call","Promise","res","rej","then","resp","req","request","err","add","execute","all","getUserBalances","wallet_address","store","getState","Web3","contract","Contract","coineus_abi","cnsone_contract","coineusone_abi","fusd_contract","volt_contract","getBalance","methods","balanceOf","getAccountDividendsInfo","getAccount","fuse_balance","cns_balance","cnsone_balance","cnsone_info","fusd_balance","volt_balance","dispatch","withdrawableDividends","totalDividends","secondsUntilAutoClaimAvailable","account","getFUSE","web3AVAX","fook_contract","fud_contract","usdc_contract","wavax_contract","hedge_contract","burnit_contract","callsAVAX","avax_balance","usdc_balance","fud_balance","fud_info","wavax_balance","hedge_balance","hedge_info","burnit_balance","catch","console","log","getAVAX","web3BSC","feg_contract","callsBSC","bnb_balance","getBNB","web3ETH","okinami_contract","feg_eth_contract","callsETH","eth_balance","okinami_balance","feg_eth_balance","getETH","HomePage","setPending","unwrapAVAX","amount","window","provider","wavax_abi","allowance","approve","send","from","once","tx","on","error","receipt","withdraw","amt","Container","maxWidth","paddingBottom","IconButton","disabled","edge","claim","variant","fullWidth","getPairPrices","fusd_fuse","unipair_abi","cns_fuse","volt_fuse","getReserves","fusd_fuse_reserves","cns_fuse_reserves","volt_fuse_reserves","reserve1","reserve0","inFuse","usdc_avax","fook_avax","fud_avax","hedge_avax","burnit_avax","usdc_avax_reserves","fook_avax_reserves","fud_avax_reserves","hedge_avax_reserves","burnit_avax_reserves","avax_price","inAVAX","brn0","brn1","bnb_busd","feg_bnb","callsBNB","bnb_busd_reserves","feg_bnb_reserves","bnb_price","inBNB","eth_usdc","okinami_usdc","feg_eth","eth_usdc_reserves","okinami_usdc_reserves","feg_eth_reserves","eth_price","inETH","oki0","oki1","coineusValidatorAddress","consensusAddress","consensusContract","consensus_abi","blockRewardsContract","block_reward_abi","calcRewardPerYourBlocks","rewardPerBlock","stakeAmount","numberOfValidators","totalStakeAmount","fee","Staking","TransitionUp","Slide","direction","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","snackbarTransition","setSnackbarTransition","setAmount","setData","connectedContract","setConnectedContract","setAction","displayInUSD","setDisplayInUSD","getConsensus","delegators","currentValidatorsLength","validatorFee","getBlocksPerYear","getBlockRewardAmount","push","delegatedAmount","total_stake_amount","amount_delegated","num_validators","validator_fee","blocks_per_year","reward_per_block","staked_amount","rewardPerYourBlocks","rewardPerYear","_rewardPerYourBlocks","_rewardPerYear","_estimatedAPR","useEffect","interval","setInterval","clearInterval","delegate","estimateGas","gas","encodeABI","txData","to","gasPrice","handleError","message","toString","LinearProgress","Math","floor","toLocaleString","backgroundColor","disablePadding","disableGutters","Tabs","onChange","ev","val","Tab","Box","FormControl","TextField","autoComplete","placeholder","target","InputProps","endAdornment","InputAdornment","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","TransitionComponent","sx","bottom","Alert","elevation","icon","CoineusSales","component","RouterLink","CoineusSaleDetails","useDispatch","useParams","sales_contract","setInfo","countdown","setCountdown","Infinity","secondsRemaing","setSecondsRemaing","sale_abi","forSale","getInfo","token","ratio","maxAmount","saleOpens","getAmountPurchased","canPurchaseAmount","amountPurchased","canPurchase","raising","token_contract","token_abi","token_calls","token_name","token_symbol","token_decimals","available","Date","chain_symbol","toUpperCase","getUserInfo","now","getTime","distance","days","hours","minutes","seconds","purchase","getGasPrice","sendTransaction","Breadcrumbs","separator","Link","underline","text","callback","navigator","clipboard","writeText","substr","toLocaleDateString","toLocaleTimeString","RewardsLocker","rewards_abi","coineus_contract","availableRewards","claimedRewardsTotal","lockedTokensAmount","isClaimer","fud_available","fud_claimed","fud_locked","fud_claimer","coineus_available","coineus_claimed","coineus_locked","coineus_claimer","getRewards","coineus_fund_address","CoineusPortfolio","coineus_fud_locker","hedge_fund_contract","babykrakens_contract","coineus_fund_fook_balance","coineus_fund_fook_dividends","coineus_fund_hedge_fund_balance","coineus_fund_hedge_fund_dividends","coineus_fund_burnit_balance","coineus_fund_babykrakens_balance","coineus_fund_babykrakens_dividends","xyplot","BurnSupply","burnt","supply","percent","staked","angle","PI","angle2","burntValue","colors","xDomain","yDomain","left","radiusDomain","center","x","y","angle0","opacity","radius","radius0","colorType","fontSize","alignItems","Autorenew","marginRight","Whatshot","FUD_TOKEN_ADDRESS","Stats","totalD","setTotalD","totalBurnt","setTotalBurnt","pollingInterval","getCoineusInfo","getTotalDividendsDistributed","td","Coineus","getDexScreener","tokenList","token_info","axios","get","useDexScreener","menuOpen","setMenuOpen","web3Modal","setWeb3Modal","web3ModalProvider","getWeb3Modal","providerOptions","walletconnect","description","package","WalletConnectProvider","options","bridge","qrcode","Web3Modal","disableInjectedProvider","cacheProvider","useWeb3Modal","web3mod","providerController","cachedProvider","connect","connectProvider","ethereum","changeWeb3Modal","subscribeProvider","getAccounts","accounts","parseInt","net","getId","clearWallet","acc","networkId","currentProvider","clearCachedProvider","ThemeProvider","CssBaseline","AppBar","enableColorOnDark","Toolbar","textDecoration","logo","flexGrow","getChainLogo","connectWallet","path","exact","element","Drawer","PaperProps","minWidth","alignSelf","ListSubheader","button","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3028ea.chunk.js","sourcesContent":["import {createTheme} from \"@mui/material\";\n\n\nconst theme = createTheme({\n    typography: {\n        fontFamily: `'Quicksand', sans-serif`\n    },\n    palette: {\n        mode: 'dark',\n        background: {\n            default: \"#000\"\n        },\n        primary: {\n            main: '#75de00'\n        }\n    },\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                elevation0: {\n                    padding: 20,\n                    border: '1px solid #eee',\n                    height: '100%'\n                }\n            }\n        }\n    }\n});\n\nexport default theme;","export default __webpack_public_path__ + \"static/media/logo192.5d709d53.png\";","import { BigNumber } from 'bignumber.js'\n\nexport const ROUND_PRECISION = 2\nexport const MAX_PRECISION = 18\n\nexport const formatWeiToNumber = (value, decimals = 18) => new BigNumber(value).div(10 ** decimals).toNumber()\nexport const formatWei = (value, round = ROUND_PRECISION, decimals = 18) => new BigNumber(value).div(10 ** decimals).toFormat(round, BigNumber.ROUND_HALF_UP)\nexport const formatEther = (value, round = ROUND_PRECISION) => new BigNumber(value).toFormat(round, BigNumber.ROUND_HALF_UP)\n\nexport const toWei = (value, decimals = 18) => {\n    if (!value) {\n        return 0\n    }\n    return new BigNumber(value).multipliedBy(10 ** decimals).toFixed()\n}\n\nexport const addressShortener = (address) => address ? `${address.substring(0, 6)}...${address.substring(address.length - 4, address.length)}` : ''\n\nexport const formatNumber = (num) => String(num).replace(/(.)(?=(\\d{3})+$)/g, '$1,')","import {CircularProgress, Dialog, DialogContent, Typography} from \"@mui/material\";\nimport cns_logo from '../images/logo192.png'\n\nexport default function CoineusLoading(props) {\n\n    return <Dialog\n        open={props.open}\n        // PaperProps={{style: {backgroundColor: '#872eff', color: \"#fff\"}}}\n    >\n        <DialogContent>\n            <div style={{margin: '0 auto', textAlign: 'center'}}>\n                <img\n                    src={cns_logo}\n                    alt=\"Divvy Logo\"\n                    width={100}\n                    style={{position: 'fixed', margin: 10, borderRadius: \"50%\"}}\n                />\n                <CircularProgress size={120} thickness={1}/>\n            </div>\n            <Typography textAlign=\"center\" style={{marginTop: 20}}>{props.label}</Typography>\n        </DialogContent>\n    </Dialog>\n}","export function CoineusUSDFormat(number) {\n\n    if(isNaN(number))return \"$--\";\n\n    if(number < 1/(10**12)){\n        return \"$0\";\n    }\n\n    // zeros after the decinals\n    let maxDigits = parseFloat(number).toFixed(12).match(/(\\.0*)/)[0].length + 1;\n\n    //max 12\n    if (maxDigits > 12) maxDigits = 12;\n    // handle cases like 300.000000123\n    if (number > 1) maxDigits = 2;\n\n    // currency, at least 2 digits\n    let minDigits = 2;\n    // very small $ value, show at least 4\n    if(number < 1) minDigits = 4;\n\n    //sanity check, max can't be lower than min\n    if(maxDigits < minDigits) maxDigits = minDigits;\n\n    if(number < 1/(10**16)){\n        minDigits = 2;\n        maxDigits = 2;\n    }\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: minDigits,\n        maximumFractionDigits: maxDigits,\n        currency: 'USD',\n        currencySign: 'standard',\n        currencyDisplay: 'symbol',\n        style: 'currency'\n    });\n\n    return NumberFormatter.format(number);\n}\n\nexport function CoineusCryptoFormat(number) {\n\n    if(isNaN(number))return \"--\";\n\n    if(number < 1/(10**12)){\n        return 0;\n    }\n\n    let maxFraction = 4;\n\n    if (number > 1000) maxFraction = 0;\n\n    if (number < 1) maxFraction = 4;\n    if (number < .1) maxFraction = 5;\n    if (number < .01) maxFraction = 5;\n    if (number < .001) maxFraction = 7;\n    if (number < .0001) maxFraction = 8;\n    if (number < .00001) maxFraction = 9;\n    if (number < .000001) maxFraction = 10;\n    if (number < .0000001) maxFraction = 11;\n    if (number < .00000001) maxFraction = 12;\n    if (number < .000000001) maxFraction = 13;\n    if (number < .0000000001) maxFraction = 14;\n    if (number < .00000000001) maxFraction = 15;\n    if (number < .000000000001) maxFraction = 16;\n\n    const NumberFormatter = new Intl.NumberFormat('en-US', {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction,\n    });\n\n    return NumberFormatter.format(number);\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const DEXScreenerApi = createApi({\n    reducerPath: 'DEXScreenerApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'https://api.dexscreener.com/latest/dex/' }),\n    endpoints: builder => ({\n        getPair: builder.query({\n            query: ({chain_id, pair_address}) => `pairs/${chain_id}/${pair_address}`\n        }),\n        getToken: builder.query({\n            query: (token_address) => `tokens/${token_address}`\n        })\n    })\n})\n\nexport const { useGetPairQuery, useGetTokenQuery } = DEXScreenerApi\n","import {\n    Avatar, Button,\n    Dialog,\n    DialogContent,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Typography\n} from \"@mui/material\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport clsx from \"clsx\";\n\nimport {makeStyles} from \"@mui/styles\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nimport millify from \"millify\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    },\n    negative: {\n        color: 'red'\n    },\n    positive: {\n        color: 'green'\n    }\n}));\n\nexport default function TokenInfoDialog(props) {\n\n    const {contract_address, network, open, close, wrap} = props;\n\n    const {data, status} = useGetTokenQuery(wrap || contract_address, {\n        skip: !open\n    });\n\n    return <Dialog open={open} fullScreen>\n        <DialogContent>\n            <Button onClick={close} style={{position: 'absolute', top: 15, right: 15, zIndex: 99999}}>Close</Button>\n            <Grid container spacing={2}>\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && data.pairs.length !== 0\n                    && <>\n                        <PairDetails\n                            contract_address={contract_address}\n                            data={data.pairs[0]}\n                            network={network}\n                        />\n                    <Markets data={data.pairs}/>\n                    </>\n                }\n                {\n                    status === 'fulfilled'\n                    && data.pairs\n                    && !data.pairs.length\n                    && <Grid item xs={12}><Typography>No pairs found</Typography></Grid>\n                }\n            </Grid>\n        </DialogContent>\n    </Dialog>\n}\n\nfunction PairDetails(props) {\n\n    const classes = useStyles();\n\n    const {data, network, contract_address} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? classes.positive : classes.negative\n    }\n\n    let {name, symbol} = data.baseToken;\n\n    if(contract_address === 'native'){\n        name = name.replace('Wrapped ', '')\n        symbol = symbol.replace('W', '')\n    }\n\n    return <Grid item xs={12}>\n        <ListItem>\n            <ListItemAvatar>\n                <Avatar src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}/logo.png`}/>\n                {data.chainId && <span className={clsx(classes.networkChip, data.chainId)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={symbol}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.fdv)}\n                secondary=\"Fully Diluted Value\"\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={CoineusUSDFormat(data.priceUsd)}\n                secondary=\"Price in USD\"\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(data.priceNative)}\n                secondary={`Price in ${data.quoteToken.symbol}`}\n            />\n        </ListItem>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.liquidity.usd)}\n                secondary=\"Liquidity\"\n            />\n            <ListItemText\n                primary={millify(data.liquidity.base)}\n                secondary={data.baseToken.symbol}\n            />\n            <ListItemText\n                primary={millify(data.liquidity.quote)}\n                secondary={data.quoteToken.symbol}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Price Change</Typography>\n        <ListItem>\n            <ListItemText\n                primary={data.priceChange.m5 + \"%\"}\n                secondary=\"5 mins\"\n                className={getColorClass(data.priceChange.m5)}\n            />\n            <ListItemText\n                primary={data.priceChange.h1 + \"%\"}\n                secondary=\"1 hr\"\n                className={getColorClass(data.priceChange.h1)}\n            />\n            <ListItemText\n                primary={data.priceChange.h6 + \"%\"}\n                secondary=\"6 hrs\"\n                className={getColorClass(data.priceChange.h6)}\n            />\n            <ListItemText\n                primary={data.priceChange.h24 + \"%\"}\n                secondary=\"24 hrs\"\n                className={getColorClass(data.priceChange.h24)}\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Volume</Typography>\n        <ListItem>\n            <ListItemText\n                primary={'$'+millify(data.volume.m5)}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h1)}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h6)}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={'$'+millify(data.volume.h24)}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Transactions (Buys/Sells)</Typography>\n        <ListItem>\n            <ListItemText\n                primary={`${data.txns.m5.buys}/${data.txns.m5.sells}`}\n                secondary=\"5 mins\"\n            />\n            <ListItemText\n                primary={`${data.txns.h1.buys}/${data.txns.h1.sells}`}\n                secondary=\"1 hr\"\n            />\n            <ListItemText\n                primary={`${data.txns.h6.buys}/${data.txns.h6.sells}`}\n                secondary=\"6 hrs\"\n            />\n            <ListItemText\n                primary={`${data.txns.h24.buys}/${data.txns.h24.sells}`}\n                secondary=\"24 hrs\"\n            />\n        </ListItem>\n    </Grid>\n}\n\nfunction Markets(props) {\n\n    const {data} = props;\n\n    const getColorClass = (value) => {\n        if (value === 0) return '';\n\n        return value > 0 ? 'green' : 'red'\n    }\n\n    const getDexLabel = (id) => {\n        switch(id){\n            case \"voltagefinance\":\n                return \"Voltage Finance\";\n            case \"elkfinance\":\n                return \"Elk Finance\";\n            case \"sushiswap\":\n                return \"Sushi Swap\";\n            case \"traderjoe\":\n                return \"Trader Joe\";\n            case \"pangolin\":\n                return \"Pangolin\";\n            case \"swapsicle\":\n                return \"Swapsicle\";\n            case \"yetiswap\":\n                return \"Yeti Swap\";\n            case \"pancakeswap\":\n                return \"Pancake Swap\";\n            case \"uniswap\":\n                return \"Uniswap\";\n            default:\n                return \"Unknown DEX\";\n        }\n    }\n\n    return <Grid item xs={12}>\n        <Typography style={{paddingLeft: 15, marginTop: 10, fontWeight: 700}}>Markets</Typography>\n        <List>\n\n            {\n                data.map(pair => {\n                    return <ListItem key={pair.pairAddress}>\n                        <ListItemText\n                            primary={<><span style={{fontWeight: 300}}>{pair.baseToken.symbol}/</span>{pair.quoteToken.symbol}</>}\n                            primaryTypographyProps={{fontWeight:700}}\n                            secondary={`${getDexLabel(pair.dexId)} - $${millify(pair.liquidity.usd)}`}\n                        />\n                        <ListItemText\n                            primary={CoineusUSDFormat(pair.priceUsd)}\n                            secondary={pair.priceChange.h24 + \"%\"}\n                            primaryTypographyProps={{textAlign: \"right\"}}\n                            secondaryTypographyProps={{textAlign: \"right\", color: getColorClass(pair.priceChange.h24)}}\n                        />\n                    </ListItem>\n                })\n            }\n\n        </List>\n    </Grid>\n}","import {Avatar, ListItem, ListItemAvatar, ListItemText, Paper} from \"@mui/material\";\nimport {CoineusUSDFormat, CoineusCryptoFormat} from \"../utils/currency_format\";\nimport clsx from \"clsx\";\nimport {makeStyles} from \"@mui/styles\";\n\nimport TokenInfoDialog from \"./TokenInfoDialog\";\nimport {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {BigNumber} from \"bignumber.js\";\n\nconst useStyles = makeStyles((theme) => ({\n    networkChip: {\n        borderRadius: \"50%\",\n        marginLeft: 30,\n        position: 'absolute',\n        top: 42,\n        height: 16,\n        width: 16,\n        display: 'inline-block',\n        backgroundSize: 'cover',\n        '&.fuse': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/fuse/logo.png')`,\n        },\n        '&.avax': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/avax/logo.png')`,\n        },\n        '&.bnb': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/bnb/logo.png')`,\n        },\n        '&.eth': {\n            backgroundImage: `url('https://coineus.app/assets/tokens/eth/logo.png')`,\n        }\n    }\n}));\n\nexport default function TokenListItem(props) {\n\n    const classes = useStyles();\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const {contract_address, name, network, price, rewards, rewardsClaim, native, wrap, cnsDetails} = props;\n\n    const [open, setOpen] = useState(false);\n\n    if (wallet.balances[network] === undefined) {\n        return <></>;\n    }\n\n    const getCNSEarned = () => {\n        const {balance, deposits, transfersIn, transfersOut, withdrawals, fees} = cnsDetails;\n\n        const bal = new BigNumber(0).plus(balance);\n\n        const sub = new BigNumber(0).plus(deposits).plus(transfersIn).minus(withdrawals).minus(transfersOut).minus(fees);\n\n        return bal.minus(sub).dividedBy(10**18);\n    }\n\n    return <Paper style={{marginTop: 10, marginBottom: 5}}>\n        <ListItem secondaryAction={props.secondaryAction}>\n            <ListItemAvatar onClick={() => setOpen(true)}>\n                <Avatar\n                    src={`https://coineus.app/assets/tokens/${network}/${contract_address === 'native' ? '' : contract_address + '/'}logo.png`}/>\n                {network && !native && <span className={clsx(classes.networkChip, network)}/>}\n            </ListItemAvatar>\n            <ListItemText\n                primary={name}\n                secondary={CoineusUSDFormat(price?.inUSD)}\n                primaryTypographyProps={{fontWeight: 700}}\n            />\n            <ListItemText\n                primary={CoineusCryptoFormat(wallet.balances[network][contract_address])}\n                secondary={CoineusUSDFormat(price?.inUSD * wallet.balances[network][contract_address])}\n                primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                secondaryTypographyProps={{textAlign: 'right'}}\n            />\n        </ListItem>\n\n        {\n            rewards && <>\n                <ListItem style={{color: '#75de00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        secondary='Pending'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(rewards.allTime)} ${rewards.symbol}`}\n                        secondary={`${CoineusCryptoFormat(rewards.pending)} ${rewards.symbol}`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                {rewardsClaim}\n            </>\n        }\n\n        {\n            cnsDetails && <>\n                <ListItem style={{color: '#75de00'}}>\n                    <ListItemText\n                        primary='Rewards All-time'\n                        primaryTypographyProps={{fontWeight: 700}}\n                    />\n                    <ListItemText\n                        primary={`${CoineusCryptoFormat(getCNSEarned())} CNSONE`}\n                        primaryTypographyProps={{textAlign: 'right', fontWeight: 700}}\n                    />\n                </ListItem>\n            </>\n        }\n\n\n        {/*TODO work on token details*/}\n        <TokenInfoDialog\n            contract_address={contract_address}\n            wrap={wrap}\n            network={network}\n            open={open}\n            close={() => setOpen(false)}/>\n    </Paper>\n}","import {createSlice} from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    wallet: {\n        address: undefined,\n        chain: undefined,\n        type: undefined,\n\n        info: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        balances: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        prices: {\n            avax: {},\n            fuse: {},\n            bnb: {},\n            eth: {}\n        },\n\n        totals: {\n            avax: 0,\n            fuse: 0,\n            bnb: 0,\n            eth: 0\n        }\n    },\n    pairs: {\n        fUSDcontract: '0x249be57637d8b013ad64785404b24aebae9b098b',\n        fUSDFUSEpair: '0x933a10d094592eb3f2a26bcb366472eba8868a66',\n        CNSFUSEpair: '0x0f2e60b799f2237633754f8eec7970c125e15d75',\n        VOLTFUSEpair: '0xa670b12f8485aa379e99cf097017785b6aca5968',\n\n        USDCAVAXpair: '0xf4003f4efbe8691b60249e6afbd307abe7758adb',\n        FOOKAVAXpair: '0x3433b681141B4506B71AEAd3120b264bd9c12863',\n        FUDAVAXpair: '0x3e7f1923ddb73a05ca84721b92104a0dffff4005',\n        HEDGEAVAXpair: '0xb28031e312446415bd316c4fff52b99055c28870',\n        BRNAVAXpair: '0x2f2ac0b0de45af118e97f73b2ca9bd65b06e0894',\n\n        BNBBUSDpair: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n        FEGBNBpair: '0x2Aa763656A92ce1e6E560c3EA76b4C5fca7C6C14',\n\n        ETHUSDCPair: '0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc',\n        OKINAMIUSDCPair: '0x5ad7452cEafDaeb0936507D5BB5890964eF56Bd3',\n        FEGETHpair: '0x854373387E41371Ac6E307A1F29603c6Fa10D872',\n    },\n    rpc: {\n        fuse: 'https://rpc.fuse.io/',\n        avax: 'https://api.avax.network/ext/bc/C/rpc',\n        bnb: 'https://bsc-dataseed1.binance.org/',\n        eth: 'https://cloudflare-eth.com/'\n    },\n    tokens : {}\n};\n\nconst coineusSlice = createSlice({\n    name: 'coineus',\n    initialState,\n    reducers: {\n\n        updateWalletChain(state, action) {\n            state.wallet.chain = action.payload\n        },\n\n        updateWalletAddress(state, action) {\n            state.wallet.address = action.payload\n        },\n\n        updateWalletProviderType(state, action) {\n            state.wallet.type = action.payload\n        },\n\n        updateInfo(state, action) {\n            if(!state.wallet.info[action.payload.chain][action.payload.contract_address]){\n                state.wallet.info[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.info[action.payload.chain][action.payload.contract_address] = action.payload.info;\n        },\n\n        updateBalances(state, action) {\n            if(!state.wallet.balances[action.payload.chain][action.payload.contract_address]){\n                state.wallet.balances[action.payload.chain][action.payload.contract_address] = 0;\n            }\n            state.wallet.balances[action.payload.chain][action.payload.contract_address] = action.payload.balance;\n        },\n\n        updatePrices(state, action) {\n            if(!state.wallet.prices[action.payload.chain][action.payload.contract_address]){\n                state.wallet.prices[action.payload.chain][action.payload.contract_address] = {};\n            }\n            state.wallet.prices[action.payload.chain][action.payload.contract_address] = action.payload.price;\n        },\n\n        updateTotals(state, action) {\n            let total = 0;\n            Object.entries(state.wallet.balances[action.payload]).map(([contract_address,balance]) => {\n                if(state.wallet.prices[action.payload][contract_address]){\n                    total += balance*state.wallet.prices[action.payload][contract_address].inUSD;\n                }\n                return [contract_address,balance];\n            })\n            state.wallet.totals[action.payload] = total;\n        },\n\n        resetWallet(state) {\n            state.wallet.chain = undefined;\n            state.wallet.address = undefined;\n            state.wallet.type = undefined;\n        },\n\n        updateTokens(state, action) {\n            state.tokens = JSON.parse(JSON.stringify(action.payload));\n        }\n\n    }\n});\n\nexport const {\n    updateWalletChain,\n    updateWalletAddress,\n    updateWalletProviderType,\n\n    updateInfo,\n    updateBalances,\n    updatePrices,\n    updateTotals,\n\n    resetWallet,\n\n    updateTokens\n} = coineusSlice.actions;\n\nexport default coineusSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport coineusReducer from \"./slices/coineusSlice\";\nimport {DEXScreenerApi} from \"./services/dexscreener\";\n\nexport default configureStore({\n    reducer: {\n        coineus: coineusReducer,\n        [DEXScreenerApi.reducerPath]: DEXScreenerApi.reducer,\n    },\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(\n        DEXScreenerApi.middleware,\n    )\n})\n","export const makeBatchRequest = (web3, calls) => {\n    let batch = new web3.BatchRequest();\n\n    let promises = calls.map(call => {\n        return new Promise((res, rej) => {\n\n            if(call instanceof Promise){\n                return call.then(resp=>res(resp));\n            }\n\n            let req = call.request({}, (err, data) => {\n                if(err) rej(err);\n                else res(data)\n            });\n            batch.add(req)\n        })\n    })\n    batch.execute()\n\n    return Promise.all(promises);\n}\n\n","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updateBalances, updateInfo, updateTotals} from \"../redux/slices/coineusSlice\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport coineusone_abi from \"../abis/coineusone_abi.json\";\n\nexport default function getUserBalances(wallet_address) {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    if(wallet_address === undefined){\n        return;\n    }\n\n    getFUSE(pairs, rpc.fuse, wallet_address);\n    getAVAX(pairs, rpc.avax, wallet_address);\n    getBNB(pairs, rpc.bnb, wallet_address);\n    getETH(pairs, rpc.eth, wallet_address);\n}\n\nfunction getFUSE(pairs, rpc, wallet_address) {\n\n    const web3 = new Web3(rpc);\n    const contract = new web3.eth.Contract(coineus_abi, \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\");\n    const cnsone_contract = new web3.eth.Contract(coineusone_abi, \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\");\n    const fusd_contract = new web3.eth.Contract(coineus_abi, '0x249BE57637D8B013Ad64785404b24aeBaE9B098B');\n    const volt_contract = new web3.eth.Contract(coineus_abi, '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4');\n\n    const calls = [\n        web3.eth.getBalance(wallet_address),\n        contract.methods.balanceOf(wallet_address).call,\n        contract.methods.getAccountDividendsInfo(wallet_address).call,\n        cnsone_contract.methods.balanceOf(wallet_address).call,\n        cnsone_contract.methods.getAccount(wallet_address).call,\n        fusd_contract.methods.balanceOf(wallet_address).call,\n        volt_contract.methods.balanceOf(wallet_address).call\n    ];\n\n    makeBatchRequest(web3, calls).then(resp => {\n        let [\n            fuse_balance,\n            cns_balance,\n            info,\n            cnsone_balance,\n            cnsone_info,\n            fusd_balance,\n            volt_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: 'native',\n            balance: fuse_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        cns_balance = cns_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            info: {\n                cns_balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        //coineus one\n        const {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals} = cnsone_info;\n        store.dispatch(updateInfo({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",\n            info: {account, balance, deposits, fees, transfersIn, transfersOut, withdrawals}\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0xc2E299b47398963c618De5b05C6BdeCd4cc64022\",\n            balance: cns_balance\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',//fUSD\n            balance: fusd_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',//fUSD\n            balance: volt_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'fuse',\n            contract_address: \"0x7042807d547A2de0720421a6d2f629c9EB43E73D\",//CNSONE\n            balance: cnsone_balance / (10 ** 18)\n        }));\n\n        store.dispatch(updateTotals('fuse'));\n    })\n}\n\nfunction getAVAX(pairs, rpc, wallet_address) {\n\n    const web3AVAX = new Web3(rpc);\n    const fook_contract = new web3AVAX.eth.Contract(coineus_abi, '0x95923F63dA09B4f7520f7C65a31F318D8228B744');\n    const fud_contract = new web3AVAX.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n    const usdc_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E');\n    const wavax_contract = new web3AVAX.eth.Contract(coineus_abi, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7');\n    const hedge_contract = new web3AVAX.eth.Contract(coineus_abi, '0xe387cF241B6685D405C575ce35db78ed4844B34a');\n    const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00');\n\n    const callsAVAX = [\n        web3AVAX.eth.getBalance(wallet_address),\n        fook_contract.methods.balanceOf(wallet_address).call,\n        fook_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        usdc_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.balanceOf(wallet_address).call,\n        fud_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        wavax_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.balanceOf(wallet_address).call,\n        hedge_contract.methods.getAccountDividendsInfo(wallet_address).call,\n        burnit_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3AVAX, callsAVAX).then(resp => {\n        let [\n            avax_balance,\n            balance,\n            info,\n            usdc_balance,\n            fud_balance,\n            fud_info,\n            wavax_balance,\n            hedge_balance,\n            hedge_info,\n            burnit_balance\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: 'native',\n            balance: avax_balance / (10 ** 18)\n        }))\n\n        let withdrawableDividends = info[3];\n        let totalDividends = info[4];\n        let secondsUntilAutoClaimAvailable = info[7];\n\n        balance = balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 6);\n        totalDividends = totalDividends / (10 ** 6);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744', //fook\n            balance: balance\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', //usdc\n            balance: usdc_balance / (10 ** 6)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', //wavax\n            balance: wavax_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00', //burnit\n            balance: burnit_balance / (10 ** 9)\n        }))\n\n        // FUD TOKEN\n        withdrawableDividends = fud_info[3];\n        totalDividends = fud_info[4];\n        secondsUntilAutoClaimAvailable = fud_info[7];\n\n        fud_balance = fud_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33', //fud\n            balance: fud_balance\n        }))\n\n        // HEDGE TOKEN\n        withdrawableDividends = hedge_info[3];\n        totalDividends = hedge_info[4];\n        secondsUntilAutoClaimAvailable = hedge_info[7];\n\n        hedge_balance = hedge_balance / (10 ** 18);\n        withdrawableDividends = withdrawableDividends / (10 ** 18);\n        totalDividends = totalDividends / (10 ** 18);\n\n        store.dispatch(updateInfo({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n            info: {\n                balance,\n                withdrawableDividends,\n                totalDividends,\n                secondsUntilAutoClaimAvailable\n            }\n        }));\n\n        store.dispatch(updateBalances({\n            chain: 'avax',\n            contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a', //hedge\n            balance: hedge_balance\n        }))\n\n        store.dispatch(updateTotals('avax'));\n\n    })\n        .catch(console.log)\n}\n\nfunction getBNB(pairs, rpc, wallet_address) {\n    const web3BSC = new Web3(rpc);\n    const feg_contract = new web3BSC.eth.Contract(coineus_abi, '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167');\n\n    const callsBSC = [\n        web3BSC.eth.getBalance(wallet_address),\n        feg_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3BSC, callsBSC).then(resp => {\n        let [\n            bnb_balance,\n            balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: 'native',\n            balance: bnb_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'bnb',\n            contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n            balance: balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('bnb'));\n\n    })\n}\n\nfunction getETH(pairs, rpc, wallet_address) {\n    const web3ETH = new Web3(rpc);\n    const okinami_contract = new web3ETH.eth.Contract(coineus_abi, '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121');\n    const feg_eth_contract = new web3ETH.eth.Contract(coineus_abi, '0x389999216860AB8E0175387A0c90E5c52522C945');\n\n    const callsETH = [\n        web3ETH.eth.getBalance(wallet_address),\n        okinami_contract.methods.balanceOf(wallet_address).call,\n        feg_eth_contract.methods.balanceOf(wallet_address).call,\n    ];\n\n    makeBatchRequest(web3ETH, callsETH).then(resp => {\n        let [\n            eth_balance,\n            okinami_balance,\n            feg_eth_balance,\n        ] = resp;\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: 'native',\n            balance: eth_balance / (10 ** 18)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n            balance: okinami_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateBalances({\n            chain: 'eth',\n            contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n            balance: feg_eth_balance / (10 ** 9)\n        }))\n\n        store.dispatch(updateTotals('eth'));\n\n    })\n}","import {useSelector} from \"react-redux\";\nimport {\n    Button,\n    Container,\n    Grid,\n    ListItem,\n    IconButton,\n} from \"@mui/material\";\n\nimport Web3 from \"web3\";\nimport coineus_abi from '../abis/coineus.json';\nimport wavax_abi from \"../abis/wavax_abi.json\";\n\nimport {useState} from \"react\";\nimport ChangeCircleIcon from '@mui/icons-material/ChangeCircle';\n\nimport {toWei} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport TokenListItem from \"../components/TokenListItem\";\nimport getUserBalances from \"../utils/get_balances\";\n\nexport default function HomePage() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    const [pending, setPending] = useState(false);\n\n    const claimFud = () => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(coineus_abi, '0x80363cc2CAa2545554d155031e47049ee2F98f33');\n\n            contract.methods\n                .claim()\n                .send({from: wallet.address})\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                })\n                .then(function (receipt) {\n                    getUserBalances(wallet.address);\n                    setPending(false);\n                });\n        }\n    }\n\n    const unwrapAVAX = async (amount) => {\n        if (wallet.address) {\n            const web3 = new Web3(window.provider);\n            const contract = new web3.eth.Contract(wavax_abi, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\");\n\n\n            contract\n                .methods\n                .allowance(wallet.address, \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\")\n                .call((err, resp) => {\n\n                    if (err) return;\n\n                    if (resp < amount) {\n                        contract\n                            .methods\n                            .approve(\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\", toWei(amount * 100))\n                            .send({from: wallet.address})\n                            .once('transactionHash', function (tx) {\n                                setPending(true)\n                            })\n                            .on('error', function (error) {\n                                setPending(false)\n                            })\n                            .then(function (receipt) {\n                                setPending(false)\n                                withdraw()\n                            });\n                    } else {\n                        withdraw()\n                    }\n                })\n\n            const withdraw = () => {\n                const amt = toWei(amount - .0000000000000001);\n                contract.methods.withdraw(amt)\n                    .send({from: wallet.address})\n                    .once('transactionHash', function (tx) {\n                        setPending(true)\n                    })\n                    .on('error', function (error) {\n                        setPending(false)\n                    })\n                    .then(function (receipt) {\n                        getUserBalances(wallet.address);\n                        setPending(false);\n                    });\n            }\n        }\n    }\n\n    return (<Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n\n                    <TokenListItem\n                        contract_address=\"native\"\n                        network=\"avax\"\n                        name=\"AVAX\"\n                        native\n                        price={wallet.prices.avax?.native}\n                        wrap=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                    />\n\n                    {/*WAVAX*/}\n                    <TokenListItem\n                        contract_address=\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"\n                        network=\"avax\"\n                        name=\"WAVAX\"\n                        price={wallet.prices.avax?.[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"]}\n                        secondaryAction={\n                            <IconButton\n                                disabled={\n                                    wallet.chain !== 43114 ||\n                                    wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"] < 1 / (10 ** 16)\n                                }\n                                edge=\"end\"\n                                onClick={() => unwrapAVAX(wallet.balances.avax[\"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"])}\n                                color=\"primary\"\n                            >\n                                <ChangeCircleIcon/>\n                            </IconButton>\n                        }\n                    />\n\n                    {/*FUD*/}\n                    <TokenListItem\n                        contract_address=\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"\n                        network=\"avax\"\n                        name=\"FUD\"\n                        price={wallet.prices.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]}\n                        rewards={{\n                            allTime: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.totalDividends,\n                            pending: wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends,\n                            symbol: 'WAVAX'\n                        }}\n                        rewardsClaim={\n                            <ListItem style={{color: '#75de00'}}>\n                                <Button onClick={claimFud} variant='contained' fullWidth\n                                        disabled={\n                                            wallet.chain !== 43114 ||\n                                            wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.withdrawableDividends === 0 ||\n                                            !wallet.address ||\n                                            wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0\n                                        }>{wallet.chain !== 43114 ? 'Change to AVAX Chain' : `Claim ${wallet.info.avax?.[\"0x80363cc2CAa2545554d155031e47049ee2F98f33\"]?.secondsUntilAutoClaimAvailable > 0 ? 'Wait' : ''}`}</Button>\n                            </ListItem>\n                        }\n                    />\n                </Grid>\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n        </Container>\n    );\n}","import store from \"../redux/store\";\nimport Web3 from \"web3\";\nimport unipair_abi from \"../abis/IUniswapV2Pair.json\";\nimport {makeBatchRequest} from \"./promisify\";\nimport {updatePrices, updateTotals} from \"../redux/slices/coineusSlice\";\n\nexport default function getPairPrices() {\n    const _store = store.getState();\n    const {pairs, rpc} = _store.coineus;\n\n    getFUSE(pairs, rpc.fuse);\n    getAVAX(pairs, rpc.avax);\n    getBNB(pairs, rpc.bnb);\n    getETH(pairs, rpc.eth);\n}\n\nfunction getFUSE(pairs, rpc) {\n\n    //FUSE\n    const web3 = new Web3(rpc);\n    const fusd_fuse = new web3.eth.Contract(unipair_abi, pairs.fUSDFUSEpair);\n    const cns_fuse = new web3.eth.Contract(unipair_abi, pairs.CNSFUSEpair);\n    const volt_fuse = new web3.eth.Contract(unipair_abi, pairs.VOLTFUSEpair);\n\n    const calls = [\n        fusd_fuse.methods.getReserves().call,\n        cns_fuse.methods.getReserves().call,\n        volt_fuse.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3, calls)\n        .then(resp => {\n            const [\n                fusd_fuse_reserves,\n                cns_fuse_reserves,\n                volt_fuse_reserves\n            ] = resp\n\n            //FUSE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: 'native',\n                price: {\n                    inUSD: fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0,\n                    inFuse: 1\n                }\n            }));\n\n            //FUSD\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x249BE57637D8B013Ad64785404b24aeBaE9B098B',\n                price: {\n                    inUSD: 1,\n                    inFuse: fusd_fuse_reserves.reserve0/fusd_fuse_reserves.reserve1\n                }\n            }));\n\n            //CNS\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0xc2E299b47398963c618De5b05C6BdeCd4cc64022',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //CNSONE\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x7042807d547A2de0720421a6d2f629c9EB43E73D',\n                price: {\n                    inFuse: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1,\n                    inUSD: cns_fuse_reserves.reserve0/cns_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            //VOLT\n            store.dispatch(updatePrices({\n                chain: 'fuse',\n                contract_address: '0x34Ef2Cc892a88415e9f02b91BfA9c91fC0bE6bD4',\n                price: {\n                    inFuse: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1,\n                    inUSD: volt_fuse_reserves.reserve0/volt_fuse_reserves.reserve1 * fusd_fuse_reserves.reserve1/fusd_fuse_reserves.reserve0\n                }\n            }));\n\n            store.dispatch(updateTotals('fuse'));\n        });\n}\n\nfunction getAVAX(pairs, rpc) {\n\n\n    //AVAX\n    const web3AVAX = new Web3(rpc);\n    const usdc_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.USDCAVAXpair);\n    const fook_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FOOKAVAXpair);\n    const fud_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.FUDAVAXpair);\n    const hedge_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.HEDGEAVAXpair);\n    const burnit_avax = new web3AVAX.eth.Contract(unipair_abi, pairs.BRNAVAXpair);\n\n    const callsAVAX = [\n        usdc_avax.methods.getReserves().call,\n        fook_avax.methods.getReserves().call,\n        fud_avax.methods.getReserves().call,\n        hedge_avax.methods.getReserves().call,\n        burnit_avax.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3AVAX, callsAVAX)\n        .then(resp => {\n            const [\n                usdc_avax_reserves,\n                fook_avax_reserves,\n                fud_avax_reserves,\n                hedge_avax_reserves,\n                burnit_avax_reserves\n            ] = resp\n\n            const avax_price = usdc_avax_reserves.reserve1/usdc_avax_reserves.reserve0 * (10**12)\n\n            //AVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: 'native',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //WAVAX\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n                price: {\n                    inUSD: avax_price,\n                    inAVAX: 1\n                }\n            }));\n\n            //USDC\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E',\n                price: {\n                    inUSD: 1,\n                    inAVAX: usdc_avax_reserves.reserve0/usdc_avax_reserves.reserve1 / (10**12)\n                }\n            }));\n\n            //FOOK\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x95923F63dA09B4f7520f7C65a31F318D8228B744',\n                price: {\n                    inAVAX: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0,\n                    inUSD: fook_avax_reserves.reserve1/fook_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //FUD\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x80363cc2CAa2545554d155031e47049ee2F98f33',\n                price: {\n                    inAVAX: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0,\n                    inUSD: fud_avax_reserves.reserve1/fud_avax_reserves.reserve0 * avax_price\n                }\n            }));\n\n            //HEDGE FUND\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0xe387cF241B6685D405C575ce35db78ed4844B34a',\n                price: {\n                    inAVAX: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1,\n                    inUSD: hedge_avax_reserves.reserve0/hedge_avax_reserves.reserve1 * avax_price\n                }\n            }));\n\n            const brn0 = burnit_avax_reserves.reserve0 / (10**9)\n            const brn1 = burnit_avax_reserves.reserve1 / (10**18)\n\n            //BURNIT\n            store.dispatch(updatePrices({\n                chain: 'avax',\n                contract_address: '0x9CcAd19669259C1FBF13FDa959400C871b3d0E00',\n                price: {\n                    inAVAX: brn1/brn0,\n                    inUSD: brn1/brn0 * avax_price\n                }\n            }));\n\n            store.dispatch(updateTotals('avax'));\n\n        });\n}\n\nfunction getBNB(pairs, rpc) {\n\n\n    //BSC\n    const web3BSC = new Web3(rpc);\n    const bnb_busd = new web3BSC.eth.Contract(unipair_abi, pairs.BNBBUSDpair);\n    const feg_bnb = new web3BSC.eth.Contract(unipair_abi, pairs.FEGBNBpair);\n\n    const callsBNB = [\n        bnb_busd.methods.getReserves().call,\n        feg_bnb.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3BSC, callsBNB)\n        .then(resp => {\n            const [\n                bnb_busd_reserves,\n                feg_bnb_reserves\n            ] = resp\n\n            const bnb_price = bnb_busd_reserves.reserve0/bnb_busd_reserves.reserve1\n\n            //BNB\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: 'native',\n                price: {\n                    inUSD: bnb_price,\n                    inBNB: 1\n                }\n            }));\n\n            //FEG BSC\n            store.dispatch(updatePrices({\n                chain: 'bnb',\n                contract_address: '0xacFC95585D80Ab62f67A14C566C1b7a49Fe91167',\n                price: {\n                    inUSD: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9) * bnb_price ,\n                    inBNB: feg_bnb_reserves.reserve1/feg_bnb_reserves.reserve0/(10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('bnb'));\n\n        });\n\n}\n\nfunction getETH(pairs, rpc) {\n\n\n    //ETH\n    const web3ETH = new Web3(rpc);\n    const eth_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.ETHUSDCPair);\n    const okinami_usdc = new web3ETH.eth.Contract(unipair_abi, pairs.OKINAMIUSDCPair);\n    const feg_eth = new web3ETH.eth.Contract(unipair_abi, pairs.FEGETHpair);\n\n\n    const callsETH = [\n        eth_usdc.methods.getReserves().call,\n        okinami_usdc.methods.getReserves().call,\n        feg_eth.methods.getReserves().call\n    ]\n\n    makeBatchRequest(web3ETH, callsETH)\n        .then(resp => {\n\n            const [\n                eth_usdc_reserves,\n                okinami_usdc_reserves,\n                feg_eth_reserves\n            ] = resp\n\n            const eth_price = eth_usdc_reserves.reserve0/eth_usdc_reserves.reserve1*(10**12)\n\n            //ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: 'native',\n                price: {\n                    inUSD: eth_price,\n                    inETH: 1\n                }\n            }));\n\n            const oki0 = okinami_usdc_reserves.reserve0 / (10**9)\n            const oki1 = okinami_usdc_reserves.reserve1 / (10**6)\n\n            //OKINAMI\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x1C4853Ec0d55e420002c5eFaBc7Ed8e0bA7A4121',\n                price: {\n                    inUSD: oki1/oki0,\n                    inETH: oki1/oki0\n                }\n            }));\n\n            //FEG ETH\n            store.dispatch(updatePrices({\n                chain: 'eth',\n                contract_address: '0x389999216860AB8E0175387A0c90E5c52522C945',\n                price: {\n                    inUSD: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9) * eth_price,\n                    inETH: feg_eth_reserves.reserve1/feg_eth_reserves.reserve0 / (10**9)\n                }\n            }));\n\n            store.dispatch(updateTotals('eth'));\n\n        })\n        .catch(console.log);\n\n}\n\n","import Web3 from \"web3\";\nimport consensus_abi from \"../abis/consensus_abi.json\";\nimport block_reward_abi from \"../abis/block_reward_abi.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {\n    Alert,\n    Box,\n    Button,\n    Container,\n    FormControl,\n    Grid, InputAdornment, LinearProgress,\n    List,\n    ListItem,\n    ListItemText,\n    Paper, Slide, Snackbar, Tab, Tabs,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport {toWei, formatWei} from '../utils/format';\nimport CoineusLoading from \"../components/CoineusLoading\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\n\nconst web3 = new Web3('https://rpc.fuse.io');\nconst coineusValidatorAddress = \"0x53e2033F86C1a54bEbAE893DC8C9fAe179b3Faa2\";\nconst consensusAddress = \"0x3014ca10b91cb3D0AD85fEf7A3Cb95BCAc9c0f79\";\nconst blockRewardAddress = \"0x63D4efeD2e3dA070247bea3073BCaB896dFF6C9B\";\nconst consensusContract = new web3.eth.Contract(consensus_abi, consensusAddress);\nconst blockRewardsContract = new web3.eth.Contract(block_reward_abi, blockRewardAddress);\n\nconst calcRewardPerYourBlocks = (\n    rewardPerBlock,\n    stakeAmount,\n    numberOfValidators,\n    totalStakeAmount,\n    fee) => new BigNumber(rewardPerBlock)\n    .multipliedBy(new BigNumber(stakeAmount))\n    .multipliedBy(numberOfValidators)\n    .div(new BigNumber(totalStakeAmount))\n    .multipliedBy((1 - fee))\n\n\nexport default function Staking() {\n\n    const {wallet} = useSelector(state => state.coineus);\n\n    function TransitionUp(props) {\n        return <Slide {...props} direction=\"up\"/>;\n    }\n\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState(\"Testing Snackbar\");\n    const [snackbarSeverity, setSnackbarSeverity] = useState(\"success\");\n    const [snackbarTransition, setSnackbarTransition] = useState(undefined);\n\n    const [pending, setPending] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n    const [data, setData] = useState({});\n    const [connectedContract, setConnectedContract] = useState(0);\n    const [action, setAction] = useState('stake');\n    const [displayInUSD, setDisplayInUSD] = useState(false);\n\n    const getConsensus = () => {\n\n        const calls = [\n            consensusContract.methods.delegators(coineusValidatorAddress).call,\n            consensusContract.methods.totalStakeAmount().call,\n            consensusContract.methods.stakeAmount(coineusValidatorAddress).call,\n            consensusContract.methods.currentValidatorsLength().call,\n            consensusContract.methods.validatorFee(coineusValidatorAddress).call,\n            blockRewardsContract.methods.getBlocksPerYear().call,\n            blockRewardsContract.methods.getBlockRewardAmount().call\n        ];\n\n        if (wallet.address && wallet.chain === 122) {\n            calls.push(consensusContract.methods.delegatedAmount(wallet.address, coineusValidatorAddress).call)\n            const web3 = new Web3(window.provider);\n            setConnectedContract(new web3.eth.Contract(consensus_abi, consensusAddress));\n        }\n\n        makeBatchRequest(web3, calls).then(resp => {\n            const [\n                delegators,\n                total_stake_amount,\n                amount_delegated,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block\n            ] = resp;\n            let staked_amount = 0;\n\n            if (wallet.address) {\n                staked_amount = resp[resp.length - 1];\n            }\n\n            setData({\n                delegators,\n                total_stake_amount,\n                amount_delegated: amount_delegated / (10 ** 18),\n                staked_amount,\n                num_validators,\n                validator_fee,\n                blocks_per_year,\n                reward_per_block,\n                fuse_balance: wallet\n            })\n\n            // get delegators amount list\n            // const aCalls = [];\n            // delegators.map(d => {\n            //     aCalls.push(consensusContract.methods.delegatedAmount(d,coineusValidatorAddress).call)\n            // })\n            // makeBatchRequest(web3, aCalls).then(resp => {\n            //     delegators.map( (d,i) => {\n            //         console.log(d, formatWei(resp[i]))\n            //     })\n            // });\n\n        })\n    }\n\n    // preview for staking\n    const rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        toWei(amount) || 0,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n\n    const average = rewardPerYourBlocks.div(data.num_validators || 0)\n    const rewardPerYear = average.multipliedBy(data.blocks_per_year || 0)\n\n    // Already staked\n    const _rewardPerYourBlocks = calcRewardPerYourBlocks(\n        data.reward_per_block || 0,\n        data.staked_amount > 0 ? data.staked_amount : 1,\n        data.num_validators || 0,\n        data.total_stake_amount || 0,\n        formatWei(data.validator_fee) || 0\n    )\n    const _average = _rewardPerYourBlocks.div(data.num_validators || 0)\n    const _rewardPerYear = _average.multipliedBy(data.blocks_per_year || 0)\n    const _estimatedAPR = _rewardPerYear.div(data.staked_amount > 0 ? data.staked_amount : 1)\n\n    useEffect(() => {\n        getConsensus();\n        const interval = setInterval(getConsensus, 10000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    const delegate = async () => {\n        try {\n            const tx = connectedContract.methods.delegate(coineusValidatorAddress);\n            const gas = await tx.estimateGas({\n                from: wallet.address,\n                value: toWei(amount)\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n\n    }\n\n    const withdraw = async () => {\n        try {\n            const tx = connectedContract.methods.withdraw(coineusValidatorAddress, toWei(amount))\n            const gas = await tx.estimateGas({\n                from: wallet.address\n            })\n            const gasPrice = 10000000000;//await web3.eth.getGasPrice();\n            const data = tx.encodeABI();\n            const txData = {\n                from: wallet.address,\n                to: coineusValidatorAddress,\n                data: data,\n                gas,\n                gasPrice,\n            }\n\n            tx.send(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    handleError(error)\n                })\n                .then(function (receipt) {\n                    getConsensus();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            handleError({message: e.toString()})\n        }\n    }\n\n    const handleError = (error) => {\n        if (error.message) {\n            setSnackbarTransition(() => TransitionUp)\n            setSnackbarSeverity(\"error\");\n            setSnackbarMessage(error.message);\n            setSnackbarOpen(true);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{padding: 20}} onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h4\">{displayInUSD ? CoineusUSDFormat(data.amount_delegated * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.amount_delegated)} </Typography>\n\n                        <Typography variant=\"body2\">Total FUSE Staked with Coineus</Typography>\n                        <LinearProgress variant=\"determinate\" value={(data.amount_delegated / 5000000) * 100}\n                                        style={{marginTop: 10}}/>\n                        <Typography variant=\"caption\" textAlign=\"right\"\n                                    style={{display: 'block'}}>{Math.floor(data.amount_delegated).toLocaleString()} /\n                            5,000,000</Typography>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={7}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#75de00'}}\n                           onClick={() => setDisplayInUSD(!displayInUSD)}>\n                        <Typography\n                            variant=\"h6\">{displayInUSD ? CoineusUSDFormat((data.staked_amount / (10 ** 18)) * wallet.prices.fuse?.native?.inUSD) : CoineusCryptoFormat(data.staked_amount / (10 ** 18))}</Typography>\n                        <Typography variant=\"caption\">Your FUSE Staked </Typography>\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Paper style={{padding: 20, color: '#000', backgroundColor: '#75de00'}}>\n                        <Typography\n                            variant=\"h6\">{`${isNaN(_estimatedAPR) ? \"--\" : (_estimatedAPR * 100).toFixed(2)} %`}</Typography>\n                        <Typography variant=\"caption\">Estimated APR</Typography>\n                    </Paper>\n                </Grid>\n\n                {\n                    data.staked_amount > 0 && <Grid item xs={12}>\n                        <Paper style={{padding: '10px 20px', color: '#000', backgroundColor: '#75de00'}}>\n                            <List disablePadding>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Block\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                                <ListItem disableGutters disablePadding>\n                                    <ListItemText\n                                        secondary=\"Est. Rewards Per Year\"\n                                        secondaryTypographyProps={{style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                    <ListItemText\n                                        secondary={`${(_rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                            minimumFractionDigits: 2,\n                                            maximumFractionDigits: 6\n                                        })} FUSE`}\n                                        secondaryTypographyProps={{textAlign: 'right', style: {color: '#000'}}}\n                                        style={{margin: 0}}\n                                    />\n                                </ListItem>\n                            </List>\n                        </Paper>\n                    </Grid>\n                }\n                {\n                    wallet.chain === 122 ? <Grid item xs={12}>\n                        <Paper>\n                            <Tabs\n                                variant=\"fullWidth\"\n                                value={action}\n                                onChange={(ev, val) => {\n                                    setAction(val)\n                                    setAmount('')\n                                }}\n                            >\n                                <Tab id=\"stake\" value=\"stake\" label=\"STAKE\"/>\n                                <Tab id=\"unstake\" value=\"unstake\" label=\"UNSTAKE\"/>\n                            </Tabs>\n                            {\n                                action === \"stake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"FUSE Balance\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${CoineusCryptoFormat(wallet.balances.fuse.native)} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > 5000000) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(wallet.balances.fuse.native - .1)\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\" disabled={!amount || amount > 5000000}\n                                            onClick={delegate}>Stake</Button>\n                                    <List style={{marginTop: 20}}>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Block\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(rewardPerYourBlocks / (10 ** 18)).toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 6\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Est. Rewards Per Year\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(rewardPerYear / (10 ** 18)).toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 6\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                </Box>\n                            }\n\n                            {\n                                action === \"unstake\" && <Box style={{padding: 20}}>\n                                    <List>\n                                        <ListItem disableGutters disablePadding>\n                                            <ListItemText\n                                                secondary=\"Staked FUSE\"\n                                            />\n                                            <ListItemText\n                                                secondary={`${(data.staked_amount / (10 ** 18) || \"--\").toLocaleString('en-US', {\n                                                    minimumFractionDigits: 2,\n                                                    maximumFractionDigits: 8\n                                                })} FUSE`}\n                                                secondaryTypographyProps={{textAlign: 'right'}}\n                                            />\n                                        </ListItem>\n                                    </List>\n                                    <FormControl fullWidth style={{marginBottom: 20}}>\n                                        <TextField\n                                            autoComplete=\"off\"\n                                            type=\"number\"\n                                            value={amount}\n                                            placeholder=\"Enter Amount\"\n                                            onChange={(ev) => {\n                                                if (ev.target.value > data.staked_amount / (10 ** 18)) return;\n                                                setAmount(ev.target.value)\n                                            }}\n                                            InputProps={{\n                                                endAdornment: <InputAdornment position=\"end\">\n                                                    <Button variant=\"contained\" onClick={() => {\n                                                        setAmount(data.staked_amount / (10 ** 18))\n                                                    }\n                                                    }>MAX</Button>\n                                                </InputAdornment>,\n                                            }}\n                                        />\n                                    </FormControl>\n                                    <Button fullWidth variant=\"contained\"\n                                            disabled={!amount || amount > data.staked_amount / (10 ** 18)}\n                                            onClick={withdraw}>Unstake</Button>\n                                </Box>\n                            }\n\n                        </Paper>\n                    </Grid>\n                        :\n                        <Grid item xs={12}>\n                            <Paper style={{padding:20}}>\n                                <Typography>Connect to Fuse Network</Typography>\n                            </Paper>\n                        </Grid>\n                }\n\n            </Grid>\n\n            <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n\n            <Snackbar\n                open={snackbarOpen}\n                anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}}\n                autoHideDuration={10000}\n                onClose={() => {\n                    setSnackbarOpen(false);\n                }}\n                TransitionComponent={snackbarTransition}\n                sx={{bottom: {xs: 30}}}\n            >\n                <Alert\n                    color={snackbarSeverity}\n                    variant=\"filled\"\n                    elevation={6}\n                    icon={false}\n                >\n                    <Typography>{snackbarMessage}</Typography>\n                </Alert>\n            </Snackbar>\n\n        </Container>\n    )\n}","import {\n    Avatar, Button,\n    Container,\n    Grid, ListItem, ListItemAvatar, ListItemText,\n    Paper, Typography,\n} from \"@mui/material\";\nimport {\n    Link as RouterLink\n} from \"react-router-dom\";\n\n\nexport default function CoineusSales() {\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: 0, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding: 20, border: '1px solid #75de00'}}>\n\n                    <Typography>Projects for sale on Coineus. <br/>Check back for new projects being added.</Typography>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem\n                        secondaryAction={<Button to=\"/sale/avax/0x1ed0C2a88c4E76B99bEb9B14ec6e0A1d26742E56\"\n                                                 component={RouterLink}>Buy</Button>}\n                    >\n                        <ListItemAvatar>\n                            <Avatar\n                                src={`https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText primary=\"FUD Token\" secondary=\"FUD\"/>\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Container>)\n}","import sale_abi from \"../abis/coineus_sale.json\";\nimport token_abi from \"../abis/coineus.json\";\nimport Web3 from \"web3\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Avatar, Breadcrumbs, Button,\n    Container, FormControl,\n    Grid, IconButton, InputAdornment,\n    ListItem, Link,\n    ListItemAvatar,\n    ListItemText,\n    Paper, TextField, Typography,\n} from \"@mui/material\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport {copyTextToClipboard} from \"../utils\";\nimport {formatWeiToNumber, toWei} from \"../utils/format\";\nimport {Link as RouterLink, useParams} from \"react-router-dom\";\nimport {\n    updateBalances\n} from \"../redux/slices/coineusSlice\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function CoineusSaleDetails() {\n\n    const dispatch = useDispatch();\n\n    const {chain, sales_contract} = useParams();\n    const {wallet, prices, rpc} = useSelector(state => state.coineus);\n\n    const [info, setInfo] = useState({});\n    const [amount, setAmount] = useState(\"\");\n    const [countdown, setCountdown] = useState(\"--\");\n    const [secondsRemaing, setSecondsRemaing] = useState(Infinity);\n    const [pending, setPending] = useState(false);\n\n    const web3 = new Web3(rpc[chain]);\n    const contract = new web3.eth.Contract(sale_abi, sales_contract);\n\n\n    //TODO raising in contract\n    const forSale = chain === 'avax' ? 45000000 : 1000;\n\n    const getInfo = () => {\n\n        const calls = [\n            contract.methods.token().call, contract.methods.ratio().call,\n            contract.methods.maxAmount().call, contract.methods.saleOpens().call,\n            contract.methods.getAmountPurchased(wallet.address).call,\n            contract.methods.canPurchaseAmount(wallet.address).call,]\n\n        makeBatchRequest(web3, calls).then(resp => {\n\n            const [\n                token_address,\n                ratio,\n                maxAmount,\n                saleOpens,\n                amountPurchased,\n                canPurchase\n            ] = resp;\n\n            const raising = forSale / ratio;\n\n            const token_contract = new web3.eth.Contract(token_abi, token_address);\n            const token_calls = [\n                token_contract.methods.name().call,\n                token_contract.methods.symbol().call,\n                token_contract.methods.decimals().call,\n                token_contract.methods.balanceOf(sales_contract).call,\n            ]\n\n            makeBatchRequest(web3, token_calls).then(resp => {\n\n                const [\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    available\n                ] = resp;\n\n                setInfo({\n                    available: formatWeiToNumber(available),\n                    token_address,\n                    token_name,\n                    token_symbol,\n                    token_decimals,\n                    ratio,\n                    maxAmount: formatWeiToNumber(maxAmount),\n                    saleOpens: new Date(saleOpens * 1000),\n                    amountPurchased: formatWeiToNumber(amountPurchased),\n                    canPurchase: formatWeiToNumber(canPurchase),\n                    raising,\n                    chain_symbol: chain.toUpperCase()\n                })\n            });\n        })\n\n        getUserInfo();\n    }\n\n    useEffect(() => {\n        if (wallet.address) {\n            getInfo();\n            const interval = setInterval(getInfo, 10000)\n            return () => clearInterval(interval);\n        }\n    }, [wallet.address])\n\n    useEffect(() => {\n        const interval = setInterval(function () {\n\n            // Get today's date and time\n            var now = new Date().getTime();\n\n            // Find the distance between now and the count down date\n            var distance = (info.saleOpens) - now;\n            setSecondsRemaing(distance);\n\n            // Time calculations for days, hours, minutes and seconds\n            var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            // Display the result in the element with id=\"demo\"\n            setCountdown(days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \");\n\n            // If the count down is finished, write some text\n            if (distance < 0) {\n                clearInterval(interval);\n                setCountdown(\"Open\");\n            }\n        }, 1000);\n        return () => clearInterval(interval);\n    }, [info.saleOpens])\n\n    const getUserInfo = () => {\n        //FUSE\n        const web3 = new Web3('https://rpc.fuse.io');\n        web3.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'fuse',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n        //AVAX\n        const web3AVAX = new Web3('https://api.avax.network/ext/bc/C/rpc');\n        web3AVAX.eth.getBalance(wallet.address).then(resp => {\n            dispatch(updateBalances({\n                chain: 'avax',\n                contract_address: 'native',\n                balance: resp / (10 ** 18)\n            }))\n        })\n\n    }\n\n\n    const purchase = async () => {\n\n        if (!wallet.address) return;\n\n        const web3 = new Web3(window.provider);\n        try {\n            const gasPrice = await web3.eth.getGasPrice();\n            const txData = {\n                from: wallet.address,\n                value: toWei(amount),\n                to: sales_contract,\n                gas: 1000000,\n                gasPrice\n            }\n\n            web3.eth.sendTransaction(txData)\n                .once('transactionHash', function (tx) {\n                    setPending(true)\n                })\n                .on('error', function (error) {\n                    setPending(false)\n                    // handleError(error)\n                })\n                .then(function (receipt) {\n                    getInfo();\n                    setPending(false);\n                    setAmount('');\n                })\n                .catch(() => {\n                });\n        } catch (e) {\n            // handleError({message: e.toString()})\n        }\n\n    }\n\n    if (Object.entries(info).length === 0) return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Typography textAlign=\"center\">Connect Wallet to see Sale Details</Typography>\n            </Grid>\n        </Grid>\n    </Container>\n\n    return (<Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Breadcrumbs style={{marginBottom: 10}} separator=\"›\">\n                    <Link to=\"/\" component={RouterLink} underline=\"hover\">Coineus</Link>\n                    <Link to=\"/sale\" component={RouterLink} underline=\"hover\">Sales</Link>\n                    <Typography>{info.token_name}</Typography>\n                </Breadcrumbs>\n                <Paper>\n                    <ListItem\n                        secondaryAction={\n                            <IconButton edge=\"end\" aria-label=\"Copy\" onClick={() => {\n                                copyTextToClipboard(info.token_address);\n                            }}>\n                                <ContentCopyIcon/>\n                            </IconButton>\n                        }\n                    >\n                        <ListItemAvatar>\n                            <Avatar src={`https://coineus.app/assets/tokens/avax/${info.token_address}/logo.png`}/>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={`${info.token_address?.substr(0, 6)} ... ${info.token_address?.substr(-6)}`}\n                            secondary={`${info.token_symbol} Contract Address`}\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${info.saleOpens?.toLocaleDateString()} ${info.saleOpens?.toLocaleTimeString()}`}\n                            secondary=\"Sale Opens\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={countdown}\n                            primaryTypographyProps={{color: 'primary'}}\n                            secondary=\"Countdown\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.available)} ${info.token_symbol}`}\n                            secondary=\"Available for Purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <ListItem disableGutters disablePadding>\n                    <ListItemText\n                        secondary={` ${info.chain_symbol} Balance`}\n                    />\n                    <ListItemText\n                        secondary={`${CoineusCryptoFormat(wallet.balances.avax.native)} ${info.chain_symbol}`}\n                        secondaryTypographyProps={{textAlign: 'right'}}\n                    />\n                </ListItem>\n                <FormControl fullWidth style={{marginBottom: 20}}>\n                    <TextField\n                        autoComplete=\"off\"\n                        type=\"number\"\n                        value={amount}\n                        placeholder={`Enter ${info.chain_symbol} Amount`}\n                        onChange={(ev) => {\n                            if (ev.target.value > info.canPurchase) return;\n                            setAmount(ev.target.value)\n                        }}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <Button variant=\"contained\" onClick={() => {\n                                    setAmount(wallet.balances.avax.native > info.canPurchase ? CoineusCryptoFormat(info.canPurchase) : CoineusCryptoFormat(wallet.avax_balance))\n                                }\n                                }>MAX</Button>\n                            </InputAdornment>,\n                        }}\n                    />\n                </FormControl>\n                <Button fullWidth variant=\"contained\" onClick={purchase} disabled={secondsRemaing > 0 || info.available === 0}>BUY</Button>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.amountPurchased)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.amountPurchased * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Amount purchased\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.canPurchase)} ${info.chain_symbol} / ${CoineusCryptoFormat(info.canPurchase * info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Can purchase\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising)} ${info.chain_symbol}`}\n                            secondary=\"Amount to raise\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.maxAmount)} ${info.chain_symbol}`}\n                            secondary=\"Max Buy\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`1 ${info.chain_symbol} = ${CoineusCryptoFormat(info.ratio)} ${info.token_symbol}`}\n                            secondary=\"Offer\"\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusCryptoFormat(info.raising / forSale)} ${info.chain_symbol}`}\n                            secondary={`Price in ${info.chain_symbol}`}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            primary={`${CoineusUSDFormat((info.raising / forSale) * prices[chain].inUSD)}`}\n                            secondary=\"Price in USD\"\n                        />\n                    </ListItem>\n                </Paper>\n            </Grid>\n        </Grid>\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>)\n}","export function copyTextToClipboard(text, callback) {\n    navigator.clipboard.writeText(text).then(function () {\n        if(callback)callback();\n    }, function (err) {\n        // console.error('Async: Could not copy text: ', err);\n    });\n}","import {Button, Container, Grid, ListItem, ListItemText, Paper, Typography} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\nimport CoineusLoading from \"../components/CoineusLoading\";\n\nexport default function RewardsLocker() {\n\n    const {wallet,rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n    const [pending, setPending] = useState(false);\n\n    useEffect(() => {\n\n        const web3AVAX = new Web3(rpc.avax);\n\n        const fud_contract = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n        const coineus_contract = new web3AVAX.eth.Contract(rewards_abi, \"0x2873b157ba89812ddf297719b66585a3aa836599\");\n\n        const calls = [\n            fud_contract.methods.availableRewards().call,\n            fud_contract.methods.claimedRewardsTotal().call,\n            fud_contract.methods.lockedTokensAmount().call,\n            fud_contract.methods.isClaimer(wallet.address).call,\n            coineus_contract.methods.availableRewards().call,\n            coineus_contract.methods.claimedRewardsTotal().call,\n            coineus_contract.methods.lockedTokensAmount().call,\n            coineus_contract.methods.isClaimer(wallet.address).call\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            ] = resp;\n\n            setData({\n                fud_available,\n                fud_claimed,\n                fud_locked,\n                fud_claimer,\n                coineus_available,\n                coineus_claimed,\n                coineus_locked,\n                coineus_claimer\n            })\n\n        });\n\n    }, [wallet.address]);\n\n    const claim = (contract) => {\n\n        const web3AVAX = new Web3(window.provider);\n\n        const _contract = new web3AVAX.eth.Contract(rewards_abi, contract);\n\n        _contract.methods.getRewards()\n            .send({from:wallet.address})\n            .once('transactionHash', function (tx) {\n                setPending(true)\n            })\n            .on('error', function (error) {\n                setPending(false)\n            })\n            .then(function (receipt) {\n                setPending(false);\n            });\n    }\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">FUD Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_claimed)) + \" AVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.fud_available)) + \" AVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.fud_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0xb930131f9b73e229c1ae1cf67409e99336043dc2\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n            <Grid item xs={12}>\n                <Paper style={{padding:20}}>\n                    <Typography variant=\"h6\">Coineus Rewards Locker</Typography>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                            secondary=\"Locked\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                            secondary=\"Claimed All-time\"\n                        />\n                    </ListItem>\n                    <ListItem disablePadding>\n                        <ListItemText\n                            primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_available)) + \" WAVAX\"}\n                            secondary=\"Claimable\"\n                        />\n                    </ListItem>\n                    {\n                        data.coineus_claimer && <Button variant=\"contained\" disabled={wallet.chain !== 43114} fullWidth style={{marginTop: 20}} onClick={()=>claim(\"0x2873b157ba89812ddf297719b66585a3aa836599\")}>Claim</Button>\n                    }\n                </Paper>\n            </Grid>\n        </Grid>\n\n        <CoineusLoading open={pending} label=\"Transaction Pending\"/>\n    </Container>\n}","import {\n    Avatar,\n    Container,\n    Grid, List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper,\n} from \"@mui/material\";\nimport Web3 from \"web3\";\nimport rewards_abi from \"../abis/rewards_locker.json\";\nimport coineus_abi from '../abis/coineus.json';\n\nimport {useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {CoineusCryptoFormat} from \"../utils/currency_format\";\nimport {formatWeiToNumber} from \"../utils/format\";\n\nconst coineus_fund_address = \"0x3b551c174098cDAA3A3220dfF34c822AB59B8e87\";\n\nexport default function CoineusPortfolio() {\n\n    const {rpc} = useSelector(state => state.coineus);\n\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const web3AVAX = new Web3(rpc.avax);\n        //rewards\n        const coineus_fud_locker = new web3AVAX.eth.Contract(rewards_abi, \"0xb930131f9b73e229c1ae1cf67409e99336043dc2\");\n\n        //holdings\n        const fook_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x95923F63dA09B4f7520f7C65a31F318D8228B744\");\n        const hedge_fund_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xe387cF241B6685D405C575ce35db78ed4844B34a\");\n        const burnit_contract = new web3AVAX.eth.Contract(coineus_abi, \"0x9CcAd19669259C1FBF13FDa959400C871b3d0E00\");\n        const babykrakens_contract = new web3AVAX.eth.Contract(coineus_abi, \"0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4\");\n\n\n        const calls = [\n            coineus_fud_locker.methods.claimedRewardsTotal().call,\n            coineus_fud_locker.methods.lockedTokensAmount().call,\n\n            fook_contract.methods.balanceOf(coineus_fund_address).call,\n            fook_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            hedge_fund_contract.methods.balanceOf(coineus_fund_address).call,\n            hedge_fund_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n\n            burnit_contract.methods.balanceOf(coineus_fund_address).call,\n\n            babykrakens_contract.methods.balanceOf(coineus_fund_address).call,\n            babykrakens_contract.methods.getAccountDividendsInfo(coineus_fund_address).call,\n        ];\n\n        makeBatchRequest(web3AVAX, calls).then(resp => {\n            let [\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends,\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends,\n\n                coineus_fund_burnit_balance,\n\n                coineus_fund_babykrakens_balance,\n                coineus_fund_babykrakens_dividends,\n            ] = resp;\n\n            setData({\n                coineus_claimed,\n                coineus_locked,\n\n                coineus_fund_fook_balance,\n                coineus_fund_fook_dividends: coineus_fund_fook_dividends[4]/(10**6),\n\n                coineus_fund_hedge_fund_balance,\n                coineus_fund_hedge_fund_dividends: coineus_fund_hedge_fund_dividends[4]/(10**18),\n\n                coineus_fund_burnit_balance,\n\n\n                coineus_fund_babykrakens_balance,\n                coineus_fund_babykrakens_dividends: coineus_fund_babykrakens_dividends[4]/(10**18),\n            })\n\n        });\n\n    }, []);\n\n    return <Container maxWidth=\"sm\">\n        <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x80363cc2CAa2545554d155031e47049ee2F98f33/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FUD Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Rewards Locker\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_locked)) + \" FUD\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Locked\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_claimed)) + \" WAVAX\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x95923F63dA09B4f7520f7C65a31F318D8228B744/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"FOOK Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_fook_balance)) + \" FOOK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_fook_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0x9CcAd19669259C1FBF13FDa959400C871b3d0E00/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BurnIt Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_burnit_balance) / (10**9)) + \" BRN\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n                <Paper>\n                    <List>\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Avatar src=\"https://coineus.app/assets/tokens/avax/0xA2Df0Dc89dfc39FAEe6cf13DFBf2203fEA3670E4/logo.png\" />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary=\"BabyKrakens Token\"\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Fund Holdings\"\n                            />\n                        </ListItem>\n                        <ListItem >\n                            <ListItemText\n                                primary={CoineusCryptoFormat((data.coineus_fund_babykrakens_balance) / (10**18)) + \" BK\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Balance\"\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data.coineus_fund_babykrakens_dividends) + \" USDC\"}\n                                primaryTypographyProps={{fontWeight:700}}\n                                secondary=\"Earned All-time\"\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </Grid>\n\n            {/*<Grid item xs={12}>*/}\n            {/*    <Paper>*/}\n            {/*        <List>*/}\n            {/*            <ListItem>*/}\n            {/*                <ListItemAvatar>*/}\n            {/*                    <Avatar src=\"https://coineus.app/assets/tokens/avax/0xe387cF241B6685D405C575ce35db78ed4844B34a/logo.png\" />*/}\n            {/*                </ListItemAvatar>*/}\n            {/*                <ListItemText*/}\n            {/*                    primary=\"Hedge Fund Token\"*/}\n            {/*                    primaryTypographyProps={{fontWeight:700}}*/}\n            {/*                    secondary=\"Fund Holdings\"*/}\n            {/*                />*/}\n            {/*            </ListItem>*/}\n            {/*            <ListItem >*/}\n            {/*                <ListItemText*/}\n            {/*                    primary={CoineusCryptoFormat(formatWeiToNumber(data.coineus_fund_hedge_fund_balance)) + \" Hedge Fund\"}*/}\n            {/*                    primaryTypographyProps={{fontWeight:700}}*/}\n            {/*                    secondary=\"Balance\"*/}\n            {/*                />*/}\n            {/*                <ListItemText*/}\n            {/*                    primary={CoineusCryptoFormat(data.coineus_fund_hedge_fund_dividends) + \" FOOK\"}*/}\n            {/*                    primaryTypographyProps={{fontWeight:700}}*/}\n            {/*                    secondary=\"Earned All-time\"*/}\n            {/*                />*/}\n            {/*            </ListItem>*/}\n            {/*        </List>*/}\n            {/*    </Paper>*/}\n            {/*</Grid>*/}\n\n        </Grid>\n    </Container>\n}","import * as React from \"react\";\nimport {ArcSeries, FlexibleWidthXYPlot} from \"react-vis\";\nimport {Paper, Typography, Grid} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {Autorenew, Whatshot, Savings} from \"@mui/icons-material\";\n\nconst useStyles = makeStyles((theme) => ({\n    xyplot: {\n        margin: '0 auto',\n    },\n}));\n\nfunction BurnSupply(props) {\n    const classes = useStyles();\n\n    const {burnt, supply, percent, staked} = props;\n\n    const angle = 360 * percent * (Math.PI / 180);\n\n    const percent2 = staked ? (staked - burnt) / supply : 0;\n    const angle2 = 360 * percent2 * (Math.PI / 180);\n\n    const burntValue = (percent * 100).toFixed(2);\n    const percentStaked = staked ? ((staked / supply) * 100).toFixed(2) : 0;\n\n    const colors = {\n        supply: '#75de00',\n        burned: '#FF5733',\n        staked: '#C70039',\n    }\n\n    return (\n        <Paper style={{padding: 20}}>\n            <FlexibleWidthXYPlot\n                xDomain={[-5, 5]}\n                yDomain={[-5, 5]}\n                height={250}\n                margin={{left: 0, right: 0, top: 0, bottom: 0}}\n                className={classes.xyplot}\n            >\n                <ArcSeries\n                    radiusDomain={[0, 10]}\n                    center={{x: 0, y: 0}}\n                    data={[\n                        {\n                            angle0: 0,\n                            angle: Math.PI * 2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.supply,\n                        },\n                        {\n                            angle0: angle,\n                            angle: angle + angle2,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.staked,\n                        },\n                        {\n                            angle0: 0,\n                            angle: angle,\n                            opacity: 1,\n                            radius: 6.75,\n                            radius0: 6,\n                            color: colors.burned,\n                        },\n                    ]}\n                    colorType={'literal'}\n                />\n            </FlexibleWidthXYPlot>\n            <Typography\n                style={{\n                    height: 0,\n                    width: '100%',\n                    textAlign: 'center',\n                    top: -155,\n                    position: 'relative',\n                    fontSize: 30,\n                    fontWeight: '700',\n                }}\n            >\n                {burntValue}\n                <span\n                    style={{\n                        fontSize: 12,\n                        fontWeight: '400',\n                        marginTop: -10,\n                        display: 'block',\n                    }}\n                >\n          % BURNED\n        </span>\n            </Typography>\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Autorenew\n                        style={{color: colors.supply, marginRight: 10, marginTop: 6}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.supply, fontSize: 18}}>{supply.toLocaleString()} <Typography\n                        variant=\"caption\">SUPPLY</Typography></Typography>\n                </Grid>\n            </Grid>\n\n            <Grid container direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                    <Whatshot\n                        style={{color: colors.burned, marginRight: 10, marginTop: 3}}\n                    />\n                </Grid>\n                <Grid item>\n                    <Typography style={{color: colors.burned, fontSize: 18}}>{burnt.toLocaleString()} <Typography\n                        variant=\"caption\">BURNED</Typography></Typography>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nexport default BurnSupply;\n","import {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport coineus_abi from \"../abis/coineus.json\";\nimport {makeBatchRequest} from \"../utils/promisify\";\nimport {Container, Grid, ListItem, ListItemText, Paper} from \"@mui/material\";\nimport BurnSupply from \"../components/BurntSupply\";\nimport {useGetTokenQuery} from \"../redux/services/dexscreener\";\nimport {CoineusCryptoFormat, CoineusUSDFormat} from \"../utils/currency_format\";\nimport {useSelector} from \"react-redux\";\n\nconst FUD_TOKEN_ADDRESS = '0x80363cc2CAa2545554d155031e47049ee2F98f33';\n\nexport default function Stats() {\n\n    const {rpc} = useSelector( state => state.coineus);\n    const [totalD, setTotalD] = useState(0);\n\n    const [totalStaked, setTotalStaked] = useState(0);\n    const [totalBurnt, setTotalBurnt] = useState(0);\n    const [validatorBal, setValidatorBal] = useState(0);\n\n    const {data} = useGetTokenQuery(FUD_TOKEN_ADDRESS, {\n        pollingInterval: 60000\n    });\n\n    //updates coineus info\n    useEffect(() => {\n        getCoineusInfo();\n        const interval = setInterval(getCoineusInfo, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    const getCoineusInfo = () => {\n        const web3 = new Web3(rpc.avax);\n        const contract = new web3.eth.Contract(coineus_abi, FUD_TOKEN_ADDRESS);\n\n        const calls = [\n            contract.methods.getTotalDividendsDistributed().call,\n            contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call\n        ];\n\n        makeBatchRequest(web3, calls).then(resp => {\n            let [\n                td,\n                burnt\n            ] = resp;\n\n            setTotalD(td / (10 ** 18));\n            setTotalBurnt(burnt / (10 ** 18))\n        });\n\n    }\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Grid container spacing={2} style={{marginTop: -5, paddingBottom: 20}}>\n\n                <Grid item xs={12}>\n                    <Paper style={{color: '#000', backgroundColor: '#75de00'}}>\n                        <ListItem>\n                            <ListItemText\n                                primary={`${totalD.toLocaleString('en-US', {\n                                    maximumFractionDigits: 2,\n                                    minimumFractionDigits: 2\n                                })} WAVAX` || '--'}\n                                secondary=\"Total Rewards All-time\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                                secondaryTypographyProps={{color: '#000'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <BurnSupply\n                        supply={100000000}\n                        burnt={totalBurnt}\n                        staked={0}\n                        percent={totalBurnt / 100000000}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.fdv)}\n                                secondary=\"Fully Diluted Value\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.liquidity.usd)}\n                                secondary=\"Total Liquidity\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.base)}\n                                secondary=\"FUD Token (FUD)\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={CoineusCryptoFormat(data?.pairs[0]?.liquidity.quote)}\n                                secondary=\"Wrapped AVAX (WAVAX)\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper>\n                        <ListItem>\n                            <ListItemText\n                                primary={CoineusUSDFormat(data?.pairs[0]?.volume.h24)}\n                                secondary=\"24 Hour Volume\"\n                                primaryTypographyProps={{fontWeight: 700, fontSize: '2.125rem'}}\n                            />\n                        </ListItem>\n                        <ListItem>\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.buys}\n                                secondary=\"Buys\"\n                                primaryTypographyProps={{ fontWeight: 700}}\n                            />\n                            <ListItemText\n                                primary={data?.pairs[0]?.txns.h24.sells}\n                                secondary=\"Sells\"\n                                primaryTypographyProps={{fontWeight: 700}}\n                            />\n                        </ListItem>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n        </Container>\n    )\n\n}","import {\n    AppBar,\n    Avatar,\n    Button,\n    CssBaseline,\n    Drawer,\n    Grid,\n    IconButton, Link,\n    List, ListItem, ListItemText, ListSubheader,\n    ThemeProvider,\n    Toolbar, Typography\n} from \"@mui/material\";\nimport theme from './theme';\nimport logo from './images/logo192.png';\nimport {\n    HashRouter as Router,\n    Routes,\n    Route,\n    Link as RouterLink\n} from \"react-router-dom\";\n\nimport HomePage from \"./views/HomePage\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport Web3 from \"web3\";\nimport useWeb3Modal from \"./hooks/useWeb3Modal\";\nimport {\n    resetWallet,\n    updateWalletAddress,\n    updateWalletChain,\n    updateWalletProviderType,\n} from \"./redux/slices/coineusSlice\";\nimport getPairPrices from \"./utils/get_prices\";\nimport Staking from \"./views/Staking\";\nimport CoineusSales from \"./views/CoineusSales\";\nimport CoineusSaleDetails from \"./views/CoineusSaleDetails\";\nimport RewardsLocker from \"./views/RewardsLocker\";\nimport CoineusPortfolio from \"./views/Portfolio\";\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CloseIcon from '@mui/icons-material/Close';\nimport useDexScreener from \"./hooks/useDexScreener\";\nimport Stats from \"./views/Stats\";\nimport getUserBalances from \"./utils/get_balances\";\n\nexport default function Coineus() {\n\n    const dispatch = useDispatch();\n    const {wallet} = useSelector(state => state.coineus);\n\n    useDexScreener();\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [web3Modal, setWeb3Modal] = useState(null);\n    const web3ModalProvider = useWeb3Modal();\n\n    useEffect(() => {\n        if (window.ethereum) {\n            connectProvider(window.ethereum)\n        }\n        changeWeb3Modal();\n    }, []);\n\n    async function changeWeb3Modal() {\n        const web3mod = await web3ModalProvider.getWeb3Modal();\n        if (web3mod.providerController.cachedProvider) {\n            const provider = await web3mod.connect()\n            await connectProvider(provider)\n        }\n        setWeb3Modal(web3mod);\n    }\n\n    async function connectWallet() {\n        const provider = await web3Modal.connect();\n        await connectProvider(provider)\n    }\n\n    const connectProvider = async (provider) => {\n        window.provider = provider\n        const web3 = new Web3(provider);\n        subscribeProvider(provider)\n        const accounts = await web3.eth.getAccounts();\n        if (accounts && accounts.length) {\n            //set wallet address\n            dispatch(updateWalletAddress(accounts[0]))\n        }\n        const chainId = parseInt(await web3.eth.net.getId())\n        dispatch(updateWalletChain(chainId));\n        dispatch(updateWalletProviderType(!!provider.bridge ? 'walletconnect' : 'injected'))\n    }\n\n    const subscribeProvider = (provider) => {\n        provider.on(\"close\", () => {\n            clearWallet();\n        });\n\n        provider.on(\"accountsChanged\", async (acc) => {\n            if (window.provider) {\n                dispatch(updateWalletAddress(acc[0]))\n            }\n        });\n\n        provider.on(\"chainChanged\", async (networkId) => {\n            if (window.provider) {\n                const chainId = parseInt(networkId)\n                dispatch(updateWalletChain(chainId));\n            }\n        });\n    }\n\n    const clearWallet = async () => {\n        const web3 = new Web3(window.provider);\n        if (web3 && web3.currentProvider && web3.currentProvider.close) {\n            await web3.currentProvider.close();\n        }\n        dispatch(resetWallet())\n        await web3Modal.clearCachedProvider();\n        window.provider = null;\n    }\n\n    //updates pricing\n    useEffect(() => {\n        getPairPrices();\n        const interval = setInterval(getPairPrices, 60000)\n        return () => clearInterval(interval);\n    }, []);\n\n    //updates balances\n    useEffect(() => {\n        getUserBalances(wallet.address);\n        const interval = setInterval(getUserBalances, 60000)\n        return () => clearInterval(interval);\n    }, [wallet.address]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Router>\n                <AppBar enableColorOnDark>\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={() => setMenuOpen(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n\n                        <RouterLink\n                            to={`/`}\n                            style={{textDecoration: 'none', display: 'flex'}}\n                        >\n                            <Avatar src={logo} height={40}/>\n                        </RouterLink>\n                        <div style={{flexGrow: 1}}/>\n                        {\n                            wallet.address ?\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        clearWallet();\n                                    }}\n                                >{getChainLogo(wallet.chain)} 0X... {wallet.address?.substr(-6)}</Button>\n                                :\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"inherit\"\n                                    size=\"small\"\n                                    onClick={() => connectWallet()}>Connect</Button>\n                        }\n                    </Toolbar>\n                </AppBar>\n                <Grid container style={{marginTop: 64}}>\n                    <Grid item xs={12}>\n                        <Routes>\n                            <Route\n                                path={`/`}\n                                exact={true}\n                                element={<HomePage/>}\n                            />\n                            <Route\n                                path={`/staking`}\n                                exact={true}\n                                element={<Staking/>}\n                            />\n                            <Route\n                                path={`/sale`}\n                                exact={true}\n                                element={<CoineusSales/>}\n                            />\n                            <Route\n                                path={`/sale/:chain/:sales_contract`}\n                                exact={true}\n                                element={<CoineusSaleDetails/>}\n                            />\n                            <Route\n                                path={`/rewards`}\n                                exact={true}\n                                element={<RewardsLocker/>}\n                            />\n                            <Route\n                                path={`/portfolio`}\n                                exact={true}\n                                element={<CoineusPortfolio/>}\n                            />\n                            <Route\n                                path={`/stats`}\n                                exact={true}\n                                element={<Stats />}\n                            />\n                        </Routes>\n                    </Grid>\n                </Grid>\n\n                <Drawer\n                    open={menuOpen}\n                    onClose={() => setMenuOpen(false)}\n                    PaperProps={{style: {minWidth: 240, backgroundColor: '#000', backgroundImage: 'none'}}}\n\n                >\n                    <IconButton onClick={() => setMenuOpen(false)} style={{alignSelf: 'end'}}>\n                        <CloseIcon/>\n                    </IconButton>\n                    <List onClick={() => setMenuOpen(false)}>\n\n                        <ListSubheader>FUD PROJECT</ListSubheader>\n                        <ListItem button component={RouterLink} to={'/'}>\n                            <ListItemText primary=\"Home\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/stats'}>\n                            <ListItemText primary=\"Stats\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={RouterLink} to={'/portfolio'}>\n                            <ListItemText primary=\"Fund Holdings\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>FUD TOKEN</ListSubheader>\n                        <ListItem button component={Link} href={'https://traderjoexyz.com/trade?inputCurrency=AVAX&outputCurrency=0x80363cc2CAa2545554d155031e47049ee2F98f33'} target=\"_blank\">\n                            <ListItemText primary=\"Buy\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://www.dextools.io/app/avalanche/pair-explorer/0x3e7f1923ddb73a05ca84721b92104a0dffff4005'} target=\"_blank\">\n                            <ListItemText primary=\"Chart\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n\n                        <ListSubheader>SOCIAL</ListSubheader>\n                        <ListItem button component={Link} href={'https://t.me/joinfud'} target=\"_blank\">\n                            <ListItemText primary=\"Telegram\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                        <ListItem button component={Link} href={'https://twitter.com/FeedUsDollars'} target=\"_blank\">\n                            <ListItemText primary=\"Twitter\" primaryTypographyProps={{style:{fontWeight:700}}}/>\n                        </ListItem>\n                    </List>\n                </Drawer>\n\n            </Router>\n        </ThemeProvider>\n    )\n}\n\nfunction getChainLogo(id) {\n    const size = {width: 16, height: 16}\n    const style = {marginRight: 10}\n    switch (id) {\n        case 1:\n            return <Avatar src='https://coineus.app/assets/tokens/eth/logo.png' sx={size} style={style}/>\n        case 56:\n            return <Avatar src='https://coineus.app/assets/tokens/bnb/logo.png' sx={size} style={style}/>\n        case 122:\n            return <Avatar src='https://coineus.app/assets/tokens/fuse/logo.png' sx={size} style={style}/>\n        case 43114:\n            return <Avatar src='https://coineus.app/assets/tokens/avax/logo.png' sx={size} style={style}/>\n        default:\n            return ''\n    }\n\n\n}","import {useEffect} from \"react\";\nimport tokenList from \"../utils/tokenList.json\";\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {updateTokens} from \"../redux/slices/coineusSlice\";\n\nexport default function useDexScreener() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n\n        const getDexScreener = () => {\n            let calls = [];\n            Object.entries(tokenList.tokens).map(([chain,tokens]) => {\n\n                Object.entries(tokens).map(([contract_address, token_info]) => {\n\n                    let call = axios\n                        .get(`https://api.dexscreener.com/latest/dex/tokens/${contract_address === 'native' ? token_info.wrap : contract_address}`)\n                        .then(resp => {\n                            const {pairs} = resp.data;\n                            token_info.pairs = pairs;\n                            token_info.pair = pairs[0];\n                        })\n                    calls.push(call);\n                    return [contract_address, token_info];\n                })\n                return [chain,tokens];\n            })\n\n            Promise.all(calls).then(() => {\n                dispatch(updateTokens(tokenList.tokens));\n            })\n        }\n\n        getDexScreener();\n        const interval = setInterval(getDexScreener, 60000)\n        return () => clearInterval(interval);\n    }, [])\n\n    return {\n        tokenList\n    }\n\n}","import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nexport default function useWeb3Modal() {\n\n    const getWeb3Modal = async () => {\n\n        const providerOptions = {\n            walletconnect: {\n                display: {\n                    name: \"WalletConnect\",\n                    description: \"Scan qrcode with your mobile wallet\"\n                },\n                package: WalletConnectProvider,\n                options: {\n                    bridge: \"https://bridge.walletconnect.org\",\n                    network: 'binance',\n                    rpc: {\n                        56: 'https://bsc-dataseed.binance.org/',\n                        122: 'https://rpc.fuse.io',\n                        43114: 'https://api.avax.network/ext/bc/C/rpc',\n                        1: 'https://cloudflare-eth.com/'\n                    },\n                    qrcode: true\n                },\n            },\n        };\n\n        return new Web3Modal({\n            disableInjectedProvider: false,\n            cacheProvider: false, // optional\n            providerOptions // required\n        });\n    }\n\n    return {\n        getWeb3Modal,\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coineus from \"./Coineus\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Coineus/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}